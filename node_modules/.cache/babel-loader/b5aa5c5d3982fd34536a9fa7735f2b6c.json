{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pagedSync;\n\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\n\nvar _contentfulResolveResponse = _interopRequireDefault(require(\"contentful-resolve-response\"));\n\nvar _stringifySafe = _interopRequireDefault(require(\"./mixins/stringify-safe\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\r\n * @memberof Sync\r\n * @typedef SyncCollection\r\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\r\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\r\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\r\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\r\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\r\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\r\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\r\n */\n\n/**\r\n * Deleted Entries are the same as Entries, but only appear on the sync API.\r\n * @memberof Sync\r\n * @typedef DeletedEntry\r\n * @type Entities.Entry\r\n */\n\n/**\r\n * Deleted Assets are the same as Assets, but only appear on the sync API.\r\n * @memberof Sync\r\n * @typedef DeletedAsset\r\n * @type Entities.Asset\r\n */\n\n/**\r\n * This module retrieves all the available pages for a sync operation\r\n * @private\r\n * @param {Object} http - HTTP client\r\n * @param {Object} query - Query object\r\n * @param {Object} options - Sync options object\r\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\r\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\r\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\r\n * @return {Promise<SyncCollection>}\r\n */\n\n\nasync function pagedSync(http, query) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!query || !query.initial && !query.nextSyncToken && !query.nextPageToken) {\n    throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\n  }\n\n  if (query && query.content_type && !query.type) {\n    query.type = 'Entry';\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\n  }\n\n  const defaultOptions = {\n    resolveLinks: true,\n    removeUnresolved: false,\n    paginate: true\n  };\n\n  const {\n    resolveLinks,\n    removeUnresolved,\n    paginate\n  } = _objectSpread(_objectSpread({}, defaultOptions), options);\n\n  const syncOptions = {\n    paginate\n  };\n  const response = await getSyncPage(http, [], query, syncOptions); // clones response.items used in includes because we don't want these to be mutated\n\n  if (resolveLinks) {\n    response.items = (0, _contentfulResolveResponse.default)(response, {\n      removeUnresolved,\n      itemEntryPoints: ['fields']\n    });\n  } // maps response items again after getters are attached\n\n\n  const mappedResponseItems = mapResponseItems(response.items);\n\n  if (response.nextSyncToken) {\n    mappedResponseItems.nextSyncToken = response.nextSyncToken;\n  }\n\n  if (response.nextPageToken) {\n    mappedResponseItems.nextPageToken = response.nextPageToken;\n  }\n\n  return (0, _contentfulSdkCore.freezeSys)((0, _stringifySafe.default)((0, _contentfulSdkCore.toPlainObject)(mappedResponseItems)));\n}\n/**\r\n * @private\r\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\r\n * @return {Object} Entities mapped to an object for each entity type\r\n */\n\n\nfunction mapResponseItems(items) {\n  const reducer = type => {\n    return (accumulated, item) => {\n      if (item.sys.type === type) {\n        accumulated.push((0, _contentfulSdkCore.toPlainObject)(item));\n      }\n\n      return accumulated;\n    };\n  };\n\n  return {\n    entries: items.reduce(reducer('Entry'), []),\n    assets: items.reduce(reducer('Asset'), []),\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\n  };\n}\n/**\r\n * If the response contains a nextPageUrl, extracts the sync token to get the\r\n * next page and calls itself again with that token.\r\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\r\n * and returns it.\r\n * On each call of this function, any retrieved items are collected in the\r\n * supplied items array, which gets returned in the end\r\n * @private\r\n * @param {Object} http\r\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\r\n * @param {Object} query\r\n * @param {Object} options - Sync page options object\r\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\r\n * @return {Promise<{items: Array, nextSyncToken: string}>}\r\n */\n\n\nasync function getSyncPage(http, items, query, _ref) {\n  let {\n    paginate\n  } = _ref;\n\n  if (query.nextSyncToken) {\n    query.sync_token = query.nextSyncToken;\n    delete query.nextSyncToken;\n  }\n\n  if (query.nextPageToken) {\n    query.sync_token = query.nextPageToken;\n    delete query.nextPageToken;\n  }\n\n  if (query.sync_token) {\n    delete query.initial;\n    delete query.type;\n    delete query.content_type;\n    delete query.limit;\n  }\n\n  const response = await http.get('sync', (0, _contentfulSdkCore.createRequestConfig)({\n    query: query\n  }));\n  const data = response.data || {};\n  items = items.concat(data.items || []);\n\n  if (data.nextPageUrl) {\n    if (paginate) {\n      delete query.initial;\n      query.sync_token = getToken(data.nextPageUrl);\n      return getSyncPage(http, items, query, {\n        paginate\n      });\n    }\n\n    return {\n      items: items,\n      nextPageToken: getToken(data.nextPageUrl)\n    };\n  } else if (data.nextSyncUrl) {\n    return {\n      items: items,\n      nextSyncToken: getToken(data.nextSyncUrl)\n    };\n  } else {\n    return {\n      items: []\n    };\n  }\n}\n/**\r\n * Extracts token out of an url\r\n * @private\r\n */\n\n\nfunction getToken(url) {\n  const urlParts = url.split('?');\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","pagedSync","_contentfulSdkCore","require","_contentfulResolveResponse","_interopRequireDefault","_stringifySafe","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","http","query","options","undefined","initial","nextSyncToken","nextPageToken","Error","content_type","type","defaultOptions","resolveLinks","removeUnresolved","paginate","syncOptions","response","getSyncPage","items","itemEntryPoints","mappedResponseItems","mapResponseItems","freezeSys","toPlainObject","reducer","accumulated","item","sys","entries","reduce","assets","deletedEntries","deletedAssets","_ref","sync_token","limit","get","createRequestConfig","data","concat","nextPageUrl","getToken","nextSyncUrl","url","urlParts","split","replace"],"sources":["C:/Users/S.A COMPUTER/OneDrive/Desktop/web project/my_repo/node_modules/contentful/dist/es-modules/paged-sync.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = pagedSync;\r\n\r\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\r\n\r\nvar _contentfulResolveResponse = _interopRequireDefault(require(\"contentful-resolve-response\"));\r\n\r\nvar _stringifySafe = _interopRequireDefault(require(\"./mixins/stringify-safe\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n/**\r\n * @memberof Sync\r\n * @typedef SyncCollection\r\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\r\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\r\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\r\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\r\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\r\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\r\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\r\n */\r\n\r\n/**\r\n * Deleted Entries are the same as Entries, but only appear on the sync API.\r\n * @memberof Sync\r\n * @typedef DeletedEntry\r\n * @type Entities.Entry\r\n */\r\n\r\n/**\r\n * Deleted Assets are the same as Assets, but only appear on the sync API.\r\n * @memberof Sync\r\n * @typedef DeletedAsset\r\n * @type Entities.Asset\r\n */\r\n\r\n/**\r\n * This module retrieves all the available pages for a sync operation\r\n * @private\r\n * @param {Object} http - HTTP client\r\n * @param {Object} query - Query object\r\n * @param {Object} options - Sync options object\r\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\r\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\r\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\r\n * @return {Promise<SyncCollection>}\r\n */\r\nasync function pagedSync(http, query) {\r\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n  if (!query || !query.initial && !query.nextSyncToken && !query.nextPageToken) {\r\n    throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\r\n  }\r\n\r\n  if (query && query.content_type && !query.type) {\r\n    query.type = 'Entry';\r\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\r\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\r\n  }\r\n\r\n  const defaultOptions = {\r\n    resolveLinks: true,\r\n    removeUnresolved: false,\r\n    paginate: true\r\n  };\r\n\r\n  const {\r\n    resolveLinks,\r\n    removeUnresolved,\r\n    paginate\r\n  } = _objectSpread(_objectSpread({}, defaultOptions), options);\r\n\r\n  const syncOptions = {\r\n    paginate\r\n  };\r\n  const response = await getSyncPage(http, [], query, syncOptions); // clones response.items used in includes because we don't want these to be mutated\r\n\r\n  if (resolveLinks) {\r\n    response.items = (0, _contentfulResolveResponse.default)(response, {\r\n      removeUnresolved,\r\n      itemEntryPoints: ['fields']\r\n    });\r\n  } // maps response items again after getters are attached\r\n\r\n\r\n  const mappedResponseItems = mapResponseItems(response.items);\r\n\r\n  if (response.nextSyncToken) {\r\n    mappedResponseItems.nextSyncToken = response.nextSyncToken;\r\n  }\r\n\r\n  if (response.nextPageToken) {\r\n    mappedResponseItems.nextPageToken = response.nextPageToken;\r\n  }\r\n\r\n  return (0, _contentfulSdkCore.freezeSys)((0, _stringifySafe.default)((0, _contentfulSdkCore.toPlainObject)(mappedResponseItems)));\r\n}\r\n/**\r\n * @private\r\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\r\n * @return {Object} Entities mapped to an object for each entity type\r\n */\r\n\r\n\r\nfunction mapResponseItems(items) {\r\n  const reducer = type => {\r\n    return (accumulated, item) => {\r\n      if (item.sys.type === type) {\r\n        accumulated.push((0, _contentfulSdkCore.toPlainObject)(item));\r\n      }\r\n\r\n      return accumulated;\r\n    };\r\n  };\r\n\r\n  return {\r\n    entries: items.reduce(reducer('Entry'), []),\r\n    assets: items.reduce(reducer('Asset'), []),\r\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\r\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\r\n  };\r\n}\r\n/**\r\n * If the response contains a nextPageUrl, extracts the sync token to get the\r\n * next page and calls itself again with that token.\r\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\r\n * and returns it.\r\n * On each call of this function, any retrieved items are collected in the\r\n * supplied items array, which gets returned in the end\r\n * @private\r\n * @param {Object} http\r\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\r\n * @param {Object} query\r\n * @param {Object} options - Sync page options object\r\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\r\n * @return {Promise<{items: Array, nextSyncToken: string}>}\r\n */\r\n\r\n\r\nasync function getSyncPage(http, items, query, _ref) {\r\n  let {\r\n    paginate\r\n  } = _ref;\r\n\r\n  if (query.nextSyncToken) {\r\n    query.sync_token = query.nextSyncToken;\r\n    delete query.nextSyncToken;\r\n  }\r\n\r\n  if (query.nextPageToken) {\r\n    query.sync_token = query.nextPageToken;\r\n    delete query.nextPageToken;\r\n  }\r\n\r\n  if (query.sync_token) {\r\n    delete query.initial;\r\n    delete query.type;\r\n    delete query.content_type;\r\n    delete query.limit;\r\n  }\r\n\r\n  const response = await http.get('sync', (0, _contentfulSdkCore.createRequestConfig)({\r\n    query: query\r\n  }));\r\n  const data = response.data || {};\r\n  items = items.concat(data.items || []);\r\n\r\n  if (data.nextPageUrl) {\r\n    if (paginate) {\r\n      delete query.initial;\r\n      query.sync_token = getToken(data.nextPageUrl);\r\n      return getSyncPage(http, items, query, {\r\n        paginate\r\n      });\r\n    }\r\n\r\n    return {\r\n      items: items,\r\n      nextPageToken: getToken(data.nextPageUrl)\r\n    };\r\n  } else if (data.nextSyncUrl) {\r\n    return {\r\n      items: items,\r\n      nextSyncToken: getToken(data.nextSyncUrl)\r\n    };\r\n  } else {\r\n    return {\r\n      items: []\r\n    };\r\n  }\r\n}\r\n/**\r\n * Extracts token out of an url\r\n * @private\r\n */\r\n\r\n\r\nfunction getToken(url) {\r\n  const urlParts = url.split('?');\r\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}