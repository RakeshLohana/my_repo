{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.A COMPUTER\\\\OneDrive\\\\Desktop\\\\web project\\\\my_repo\\\\src\\\\blogpost.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 1rem;\n`;\n_c = Container;\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 2rem;\n`;\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n`;\n_c2 = Title;\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 2rem;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\nconst Article = styled.article`\n  background-color: white;\n  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n`;\nconst Image = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  margin-bottom: 1rem;\n`;\nconst Code = styled.code`\n  font-family: Consolas, monospace;\n  background-color: #f1f1f1;\n  padding: 0.25rem;\n`;\n_c3 = Code;\n\nfunction BlogPost1() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Best Practices for Writing Clean and Readable Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: \"As a developer, writing clean and readable code is essential for creating maintainable and efficient applications. Here are some tips to help you improve your coding skills and create better software:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Use consistent naming conventions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Keep your code DRY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Comment your code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Use descriptive variable and function names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Follow best practices for code structure and organization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: \"By following these tips, you can create code that is easy to understand, maintain, and scale.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Example Code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Code, {\n      children: `function calculateTriangleArea(base, height) {\n  return 0.5 * base * height;\n}\n\n// Bad Example\nfunction calc(a, b) {\n  return 0.5 * a * b;\n}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = BlogPost1;\nexport default BlogPost1;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Code\");\n$RefreshReg$(_c4, \"BlogPost1\");","map":{"version":3,"names":["React","styled","Container","div","Header","header","Title","h1","Content","Article","article","Image","img","Code","code","BlogPost1"],"sources":["C:/Users/S.A COMPUTER/OneDrive/Desktop/web project/my_repo/src/blogpost.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 960px;\r\n  margin: 0 auto;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 2rem;\r\n\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n\r\nconst Article = styled.article`\r\n  background-color: white;\r\n  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.1);\r\n  padding: 1.5rem;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  object-fit: cover;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Code = styled.code`\r\n  font-family: Consolas, monospace;\r\n  background-color: #f1f1f1;\r\n  padding: 0.25rem;\r\n`;\r\n\r\nfunction BlogPost1() {\r\n  return (\r\n    <Container>\r\n      <Title>Best Practices for Writing Clean and Readable Code</Title>\r\n      <Paragraph>\r\n        As a developer, writing clean and readable code is essential for\r\n        creating maintainable and efficient applications. Here are some tips to\r\n        help you improve your coding skills and create better software:\r\n      </Paragraph>\r\n      <List>\r\n        <ListItem>Use consistent naming conventions</ListItem>\r\n        <ListItem>Keep your code DRY</ListItem>\r\n        <ListItem>Comment your code</ListItem>\r\n        <ListItem>Use descriptive variable and function names</ListItem>\r\n        <ListItem>\r\n          Follow best practices for code structure and organization\r\n        </ListItem>\r\n      </List>\r\n      <Paragraph>\r\n        By following these tips, you can create code that is easy to understand,\r\n        maintain, and scale.\r\n      </Paragraph>\r\n      <Title>Example Code:</Title>\r\n      <Code>\r\n        {/* Good Example */}\r\n        {`function calculateTriangleArea(base, height) {\r\n  return 0.5 * base * height;\r\n}\r\n\r\n// Bad Example\r\nfunction calc(a, b) {\r\n  return 0.5 * a * b;\r\n}`}\r\n      </Code>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default BlogPost1;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA,CAJA;KAAMD,S;AAMN,MAAME,MAAM,GAAGH,MAAM,CAACI,MAAO;AAC7B;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMC,KAAK,GAAGL,MAAM,CAACM,EAAG;AACxB;AACA;AACA,CAHA;MAAMD,K;AAKN,MAAME,OAAO,GAAGP,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMM,OAAO,GAAGR,MAAM,CAACS,OAAQ;AAC/B;AACA;AACA;AACA,CAJA;AAMA,MAAMC,KAAK,GAAGV,MAAM,CAACW,GAAI;AACzB;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMC,IAAI,GAAGZ,MAAM,CAACa,IAAK;AACzB;AACA;AACA;AACA,CAJA;MAAMD,I;;AAMN,SAASE,SAAT,GAAqB;EACnB,oBACE,QAAC,SAAD;IAAA,wBACE,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,IAAD;MAAA,wBACE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF,eAgBE,QAAC,SAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBF,eAoBE,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBF,eAqBE,QAAC,IAAD;MAAA,UAEI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;IATM;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;MApCQA,S;AAsCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}