{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.A COMPUTER\\\\OneDrive\\\\Desktop\\\\web project\\\\my_repo\\\\src\\\\blogpost.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-size: 16px;\n  line-height: 1.5;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n_c = Container;\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 1rem;\n`;\n_c2 = Title;\nconst Paragraph = styled.p`\n  margin-bottom: 1rem;\n`;\n_c3 = Paragraph;\nconst Code = styled.code`\n  background-color: #f4f4f4;\n  padding: 0.5rem;\n  font-family: monospace;\n  font-size: 0.9rem;\n`;\n_c4 = Code;\nconst List = styled.ul`\n  margin-bottom: 1rem;\n`;\n_c5 = List;\nconst ListItem = styled.li`\n  margin-bottom: 0.5rem;\n`;\n_c6 = ListItem;\n\nfunction BlogPost1() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Best Practices for Writing Clean and Readable Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: \"As a developer, writing clean and readable code is essential for creating maintainable and efficient applications. Here are some tips to help you improve your coding skills and create better software:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Use consistent naming conventions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Keep your code DRY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Comment your code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Use descriptive variable and function names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Follow best practices for code structure and organization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: \"By following these tips, you can create code that is easy to understand, maintain, and scale.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Example Code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Code, {\n      children: `function calculateTriangleArea(base, height) {\n  return 0.5 * base * height;\n}\n\n// Bad Example\nfunction calc(a, b) {\n  return 0.5 * a * b;\n}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c7 = BlogPost1;\nexport default BlogPost;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Paragraph\");\n$RefreshReg$(_c4, \"Code\");\n$RefreshReg$(_c5, \"List\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"BlogPost1\");","map":{"version":3,"names":["React","styled","Container","div","Title","h1","Paragraph","p","Code","code","List","ul","ListItem","li","BlogPost1","BlogPost"],"sources":["C:/Users/S.A COMPUTER/OneDrive/Desktop/web project/my_repo/src/blogpost.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Code = styled.code`\r\n  background-color: #f4f4f4;\r\n  padding: 0.5rem;\r\n  font-family: monospace;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nfunction BlogPost1() {\r\n  return (\r\n    <Container>\r\n      <Title>Best Practices for Writing Clean and Readable Code</Title>\r\n      <Paragraph>\r\n        As a developer, writing clean and readable code is essential for\r\n        creating maintainable and efficient applications. Here are some tips to\r\n        help you improve your coding skills and create better software:\r\n      </Paragraph>\r\n      <List>\r\n        <ListItem>Use consistent naming conventions</ListItem>\r\n        <ListItem>Keep your code DRY</ListItem>\r\n        <ListItem>Comment your code</ListItem>\r\n        <ListItem>Use descriptive variable and function names</ListItem>\r\n        <ListItem>\r\n          Follow best practices for code structure and organization\r\n        </ListItem>\r\n      </List>\r\n      <Paragraph>\r\n        By following these tips, you can create code that is easy to understand,\r\n        maintain, and scale.\r\n      </Paragraph>\r\n      <Title>Example Code:</Title>\r\n      <Code>\r\n        {/* Good Example */}\r\n        {`function calculateTriangleArea(base, height) {\r\n  return 0.5 * base * height;\r\n}\r\n\r\n// Bad Example\r\nfunction calc(a, b) {\r\n  return 0.5 * a * b;\r\n}`}\r\n      </Code>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default BlogPost;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,S;AAYN,MAAME,KAAK,GAAGH,MAAM,CAACI,EAAG;AACxB;AACA;AACA,CAHA;MAAMD,K;AAKN,MAAME,SAAS,GAAGL,MAAM,CAACM,CAAE;AAC3B;AACA,CAFA;MAAMD,S;AAIN,MAAME,IAAI,GAAGP,MAAM,CAACQ,IAAK;AACzB;AACA;AACA;AACA;AACA,CALA;MAAMD,I;AAON,MAAME,IAAI,GAAGT,MAAM,CAACU,EAAG;AACvB;AACA,CAFA;MAAMD,I;AAIN,MAAME,QAAQ,GAAGX,MAAM,CAACY,EAAG;AAC3B;AACA,CAFA;MAAMD,Q;;AAIN,SAASE,SAAT,GAAqB;EACnB,oBACE,QAAC,SAAD;IAAA,wBACE,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,IAAD;MAAA,wBACE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,QAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF,eAgBE,QAAC,SAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBF,eAoBE,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBF,eAqBE,QAAC,IAAD;MAAA,UAEI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;IATM;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;MApCQA,S;AAsCT,eAAeC,QAAf"},"metadata":{},"sourceType":"module"}